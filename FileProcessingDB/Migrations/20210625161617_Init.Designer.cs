// <auto-generated />
using System;
using FileProcessingDB.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileProcessingDB.Migrations
{
    [DbContext(typeof(FileProcessingDBContext))]
    [Migration("20210625161617_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FileProcessingDB.DataModel.Advertiser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Advertisers");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.Amount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Max")
                        .HasColumnType("real");

                    b.Property<float>("Min")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Amounts");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.BaseRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdvertiserId")
                        .HasColumnType("int");

                    b.Property<int?>("AmountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditScoreId")
                        .HasColumnType("int");

                    b.Property<int>("IDAdv")
                        .HasColumnType("int");

                    b.Property<int>("IDAm")
                        .HasColumnType("int");

                    b.Property<int>("IDCr")
                        .HasColumnType("int");

                    b.Property<int>("IDL")
                        .HasColumnType("int");

                    b.Property<int>("IDPr")
                        .HasColumnType("int");

                    b.Property<int>("IDSt")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LtvId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<int>("TotalTerm")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AdvertiserId");

                    b.HasIndex("AmountId");

                    b.HasIndex("CreditScoreId");

                    b.HasIndex("LtvId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("StateId");

                    b.ToTable("BaseRates");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.CreditScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CreditScores");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.Ltv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Max")
                        .HasColumnType("real");

                    b.Property<float>("Min")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ltvs");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.BaseRate", b =>
                {
                    b.HasOne("FileProcessingDB.DataModel.Advertiser", "Advertiser")
                        .WithMany("Baserates")
                        .HasForeignKey("AdvertiserId");

                    b.HasOne("FileProcessingDB.DataModel.Amount", "Amount")
                        .WithMany("Baserates")
                        .HasForeignKey("AmountId");

                    b.HasOne("FileProcessingDB.DataModel.CreditScore", "CreditScore")
                        .WithMany("Baserates")
                        .HasForeignKey("CreditScoreId");

                    b.HasOne("FileProcessingDB.DataModel.Ltv", "Ltv")
                        .WithMany("Baserates")
                        .HasForeignKey("LtvId");

                    b.HasOne("FileProcessingDB.DataModel.ProductType", "ProductType")
                        .WithMany("Baserates")
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("FileProcessingDB.DataModel.State", "State")
                        .WithMany("Baserates")
                        .HasForeignKey("StateId");

                    b.Navigation("Advertiser");

                    b.Navigation("Amount");

                    b.Navigation("CreditScore");

                    b.Navigation("Ltv");

                    b.Navigation("ProductType");

                    b.Navigation("State");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.Advertiser", b =>
                {
                    b.Navigation("Baserates");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.Amount", b =>
                {
                    b.Navigation("Baserates");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.CreditScore", b =>
                {
                    b.Navigation("Baserates");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.Ltv", b =>
                {
                    b.Navigation("Baserates");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.ProductType", b =>
                {
                    b.Navigation("Baserates");
                });

            modelBuilder.Entity("FileProcessingDB.DataModel.State", b =>
                {
                    b.Navigation("Baserates");
                });
#pragma warning restore 612, 618
        }
    }
}
